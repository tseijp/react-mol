(self.webpackChunk_react_mol_docs=self.webpackChunk_react_mol_docs||[]).push([[435],{80178:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return f},toc:function(){return k},Atom:function(){return h},Plane:function(){return y},default:function(){return g}});var a=t(98283),r=t(7560),i=(t(2784),t(30876)),o=t(18400),s=t(43921),c=t(80248),l=t(1511),u=t(72856),m=["components"],p={sidebar_position:2,sidebar_label:"Brick"},d=void 0,f={unversionedId:"cannon/Brick",id:"cannon/Brick",isDocsHomePage:!1,title:"Brick",description:"export const Plane = (props) => (",source:"@site/examples/cannon/Brick.mdx",sourceDirName:"cannon",slug:"/cannon/Brick",permalink:"/react-mol/examples/cannon/Brick",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Brick"},sidebar:"defaultSidebar",previous:{title:"Books",permalink:"/react-mol/examples/cannon/Books"},next:{title:"Hall",permalink:"/react-mol/examples/cannon/Hall"}},k=[],h=function(n){return(0,i.kt)(l.hg,(0,r.Z)({},n,{ref:(0,c.EJ)((function(){return{mass:1,args:n.scale}}))}))},y=function(n){return(0,i.kt)("mesh",(0,r.Z)({},n,{ref:(0,c.xK)((function(){return Object.assign({mass:0},n)}))[0],receiveShadow:!0}),(0,i.kt)("planeGeometry",{attach:"geometry",args:[5,5]}),(0,i.kt)("shadowMaterial",{attach:"material",color:"#171717",opacity:.5}))},x={toc:k,Atom:h};function g(n){var e=n.components,t=(0,a.Z)(n,m);return(0,i.kt)("wrapper",(0,r.Z)({},x,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)(o.B9,(0,r.Z)({noInline:!0,Physics:c.wI,Plane:y,Instanced:l.pY,Tile:l.n9,Atom:h,range:u.w,l:50,c:4,e:2},(0,s.M4)({w:{value:2.1,min:0,max:4},d:{value:1,min:0,max:2},h:{value:.6,min:0,max:1},lap:{value:1,min:0,max:2},gap:{value:.5,min:0,max:2},dist:{value:.1,min:0,max:2}}),{mdxType:"Demo"}),'render (\n  <Canvas>\n    <Physics>\n      <Plane scale={[10, 10, 10]} rotation={[-Math.PI / 2, 0, 0]}/>\n      <Instanced scale={Array(3).fill(10 / l / h)} position-y={-1}>\n        <boxGeometry args={[1, 1, 1]}/>\n        <meshPhongMaterial color="firebrick" shininess={0}/>\n        {range(c).map(j => 2 * Math.PI * j / c).map((ry, j) =>\n          <group key={j+""} rotation-y={ry}\n            position-x={ ((w + dist)*e + d + gap)/2*Math.cos(ry)}\n            position-z={-((w + dist)*e + d + gap)/2*Math.sin(ry)}>\n            <Tile\n              items={range(l)}\n              position-y={h}\n              rotation-y={(j%2*2-1)*2*Math.PI*lap/l}>\n              {(i=0) =>\n                <Tile\n                  items={[...Array(e).keys()]}\n                  position-x={w + dist}>\n                  <Atom scale={[w, h, d]}\n                    position-x={((i - j) % 2 * 2 - 1) * gap\n                              - (w + dist) * (e - 1) / 2} />\n                </Tile>\n              }\n            </Tile>\n          </group>\n        )}\n      </Instanced>\n    </Physics>\n  </Canvas>\n)'))}g.isMDXComponent=!0},72856:function(n,e,t){"use strict";function a(n){void 0===n&&(n=0);for(var e=new Array(n);n--;)e[n]=n;return e}t.d(e,{w:function(){return a}})}}]);