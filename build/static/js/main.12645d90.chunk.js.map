{"version":3,"sources":["src/index.tsx","docs/utils/serviceWorker.ts","docs/utils/index.ts","docs/demos/Basic.tsx","docs/demos/Flow.tsx","docs/demos/Mol.tsx","docs/demos/Hel.tsx","docs/demos/index.ts","docs/utils/Page/index.ts","docs/utils/Page/hooks.ts","docs/codes/Basic.ts","docs/codes/Flow.ts","docs/codes/Mol.ts","docs/codes/Hel.ts","docs/codes/index.ts","docs/index.tsx","src/Atom/hooks.ts","src/Atom/index.tsx","src/utils.ts","docs/utils/Page/utils.ts","src/Render.tsx"],"names":["H","Math","sin","p","Mol","element","color","C","O","CH3","props","i","index","a","angle","d","double","position","useMemo","calcMolPos","rotation","eulerVec3","top","geometry","mergedGeometry","attach","children","Hel","args","Flow","ref","useRef","now","fun","value","useFrame","_","delta","current","r","s","scale","c","toArray","set","Poly","n","child","React","cloneElement","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","catch","error","console","message","get","obj","key","keys","Object","entries","DEMOS","map","file","demos","AppPage","pathname","name","split","filter","v","find","code","CODES","Demo","Basic","x","y","z","Atom","PI","cos","max","rand","m","random","Points","count","colors","Array","fill","niceColors","floor","Render","t","Boxes","Spheres","Particles","f","Dodecas","size","mul","MethylAlcohol","recursion","AcetilAcid","Polyethylene","Polypropylene","Random","Archimedes","Fermat","Power","usePage","config","pageRef","defaultPage","confRef","defaultConf","useState","normPage","setPage","useCallback","state","pre","newPage","history","pushState","log","useEffect","onChange","id","STYLES","overflowX","minHeight","card","width","height","ctrl","left","margin","padding","note","display","HookNote","style","HookCard","min","rate","HookCode","HookCtrl","anchor","collapsed","HookTree","fontSize","HookCanvas","pixelRatio","devicePixelRatio","onCreated","gl","setClearColor","camera","fov","alpha","antialias","logarithmicDepthBuffer","intensity","Suspense","fallback","App","useGrid","init","md","lg","dark","xs","side","page","trees","onClick","hash","order","slice","charSet","content","rel","href","ReactDOM","render","document","getElementById","uuid","Hierarchy","forwardRef","states","useContext","Color","group","updateMatrixWorld","useImperativeHandle","Children","useHierarchy","Recursion","grand","length","cut","material","rad","sqrt","base","THREE","axis","euler","quat1","mergeVec3","vec","j","reduce","b","_axis","_base","normalize","setFromUnitVectors","setFromQuaternion","phi","arr","makeTranslation","sph","cyl","applyMatrix4","BufferGeometryUtils","mergeBufferGeometries","pageConfig","isHome","isLocal","protocol","portname","port","search","language","urls","URL","sort","forEach","val","getp","geti","every","joinURL","maxLength","joinPage","u","createContext","mesh","setColorAt","setMatrixAt","matrixWorld","instanceMatrix","needsUpdate","Provider"],"mappings":"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","file":"static/js/main.12645d90.chunk.js","sourcesContent":["import React, {useRef, useMemo} from 'react'\r\nimport {useFrame} from 'react-three-fiber'\r\nimport * as THREE from 'three'\r\nimport {Vec3, Props, MolProps, HelProps, FlowProps, SwarmProps} from './types'\r\nimport {mergedGeometry, eulerVec3, calcMolPos} from './utils'\r\nimport {Atom} from './Atom'\r\ntype MP = Partial<Props<MolProps>>\r\ntype FP = Partial<Props<FlowProps>>\r\nconst sin = Math.sin\r\n//  ************************* REACT-MOL ************************* //\r\nexport {Atom as default, Atom, Hierarchy, Recursion} from './Atom'\r\nexport {Render} from './Render'\r\nexport * from './utils'\r\nexport * from './types'\r\n// Mol\r\nexport const H =(p:MP)=> <Mol {...p} element={1} color=\"white\"/>\r\nexport const C =(p:MP)=> <Mol {...p} element={6} color=\"black\"/>\r\nexport const O =(p:MP)=> <Mol {...p} element={8} color=\"red\"/>\r\nexport const OH =(p:MP)=> <O {...p}><H/></O>\r\nexport const CO =(p:MP)=> <C {...p}><O double/></C>\r\nexport const CH =(p:MP)=> <C {...p}><H/></C>\r\nexport const CH2 =(p:MP)=> <C {...p}><H/><H/></C>\r\nexport const CH3 =(p:MP)=> <C {...p}><H/><H/><H/></C>\r\n// Flow\r\nexport const Sin =(p:FP)=> <Flow {...p} args={(x,_,z,t) => [sin((x+t)/3)+sin((z+t)/2)]} />\r\nexport const Box =(p:FP)=> <Flow {...p} args={(x,y,z,t) => [sin(x/4+t) +sin(y/4+t)+sin(z/4+t)]} />\r\n//  *************************         ************************* //\r\n//  ************************* <Mol /> ************************* //\r\n//  *************************         ************************* //\r\nexport function Mol (props: MP): null | JSX.Element\r\nexport function Mol (props: any) {\r\n    const {index: i, angle: a, double:d} = props\r\n    const position = useMemo<Vec3>(() => calcMolPos(i, a, d), [i, a, d])\r\n    const rotation = useMemo<Vec3>(() => eulerVec3(position, [0,1,0]), [position])\r\n    return (\r\n        <Atom<MolProps>\r\n            {...props} top geometry={mergedGeometry}\r\n            {...{position, rotation}}>\r\n            <meshPhongMaterial attach=\"material\"/>\r\n            {props.children}\r\n        </Atom>\r\n    )\r\n}\r\n//  *************************         ************************* //\r\n//  ************************* <Hel /> ************************* //\r\n//  *************************         ************************* //\r\nexport function Hel (props: Partial<Props<HelProps>>): null | JSX.Element\r\nexport function Hel (props: any) {\r\n    return (\r\n        <Atom<HelProps> top {...props}>\r\n            <boxBufferGeometry attach=\"geometry\" args={[1,1,1]} />\r\n            <meshPhongMaterial attach=\"material\" />\r\n            {props.children}\r\n        </Atom>\r\n    )\r\n}\r\n//  *************************          ************************* //\r\n//  ************************* <Flow /> ************************* //\r\n//  *************************          ************************* //\r\nexport function Flow (props: Partial<Props<FlowProps>>): null | JSX.Element\r\nexport function Flow (props: any) {\r\n    const ref = useRef<any>(null)\r\n    const now = useRef<number>(0)\r\n    const fun = (value: any): value is Function => typeof value===\"function\"\r\n    useFrame((_, delta) => {\r\n        now.current += delta\r\n        const {args:a, position:p, rotation:r, scale:s, color:c} = props\r\n        const args = fun(a)\r\n            ? a(now.current, ...ref.current.position.toArray())\r\n            : [ now.current, ...(a || []) ]\r\n        fun(p) && ref.current.position.set(...p(...args))\r\n        fun(r) && ref.current.rotation.set(...r(...args))\r\n        fun(s) && ref.current.scale.set(...s(...args))\r\n        fun(c) && ref.current.scale.set(...c(...args))\r\n    })\r\n    return (\r\n        <Atom<FlowProps> {...props} ref={ref}></Atom>\r\n    )\r\n}\r\n//  *************************           ************************* //\r\n//  ************************* <Swarm /> ************************* //\r\n//  *************************           ************************* //\r\nexport function Swarm (props: Partial<Props<SwarmProps>>): null | JSX.Element\r\nexport function Swarm (props: any) {\r\n    const ref = useRef<any>(null)\r\n    const now = useRef<number>(0)\r\n    const acc = useRef<THREE.Vector3>(new THREE.Vector3(0,0,0))\r\n    const vec = useRef<THREE.Vector3>(new THREE.Vector3(0,0,0))\r\n    const fun = (value: any): value is Function => typeof value===\"function\"\r\n    useFrame((_, delta) => {\r\n        now.current += delta\r\n        const { args:a, position:p, rotation:r,\r\n                force:f, scale:s, color:c} = props\r\n        const args = fun(a)\r\n            ? a(now.current, ...ref.current.position.toArray())\r\n            : [ now.current, ...ref.current.position.toArray() ]\r\n        fun(f) && acc.current.set(...(f(...args) as Vec3))\r\n        vec.current.add(acc.current)\r\n        fun(p) && ref.current.position.set(...p(...args))\r\n        fun(r) && ref.current.rotation.set(...r(...args))\r\n        fun(s) && ref.current.scale.set(...s(...args))\r\n        fun(c) && ref.current.scale.set(...c(...args))\r\n    })\r\n    return (\r\n        <Atom<FlowProps> {...props} ref={ref} ></Atom>\r\n    )\r\n}\r\n//  *************************           ************************* //\r\n//  ************************* <Plant /> ************************* //\r\n//  *************************           ************************* //\r\nexport function Plant (props: MP): null | JSX.Element\r\nexport function Plant (props: any) {\r\n    const {index: i=0, angle: a=Math.PI/2, double:d=false} = props\r\n    const position = useMemo<Vec3>(() => calcMolPos(i, a, d), [i, a, d])\r\n    const rotation = useMemo<Vec3>(() => eulerVec3(position, [0,1,0]), [position])\r\n    return (\r\n        <Atom<MolProps> top {...props} {...{position, rotation}}>\r\n            <cylinderBufferGeometry args={[.1]}/>\r\n            <meshPhongMaterial attach=\"material\"/>\r\n            {props.children}\r\n        </Atom>\r\n    )\r\n}\r\n//  *************************          ************************* //\r\n//  ************************* <Poly /> ************************* //\r\n//  *************************          ************************* //\r\nexport function Poly <T extends object={}>(\r\n    props: Partial<Props<T>> & Partial<{\r\n        n: number,\r\n        children: null | ((\r\n            child: JSX.Element,\r\n            key: number\r\n        ) => JSX.Element),\r\n    }>\r\n): null|JSX.Element\r\nexport function Poly ({children,n=0,...props}: any) {\r\n    if (n<0) return null\r\n    const child = children(n>0 && <Poly n={n-1} children={children}/>, n)\r\n    return React.cloneElement(child, {...props, children:null, ...child.props})\r\n}\r\n// TODO functional Props for Poly\r\n// export function Poly <T extends object={}>(\r\n//     props: Partial<Props<T> & {\r\n//         n: number,\r\n//     children: null | ((\r\n//         next: ((nextProps?:Partial<Props<T>>) => JSX.Element),\r\n//         key : number\r\n//     ) => JSX.Element),\r\n//     }>\r\n// ): null|JSX.Element\r\n// export function Poly ({children,n=0,...props}: any) {\r\n//     if (n<0) return null\r\n//     const child = children(n>0 && ((nextProps: any={}) => {\r\n//         return <Poly n={n-1} {...nextProps} children={children}/>\r\n//     }), n)\r\n//     return React.cloneElement(child, {...props, children: null,...child.props})\r\n// }\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import DEMOS from '../demos'\r\nimport CODES from '../codes'\r\n\r\n\r\nconst get = (obj={},key='') => key in obj ? (obj as any)[key] : null\r\nconst keys = Object.entries(DEMOS)\r\n    .map(([file, demos]: any) => [file, ...Object.keys(demos)])\r\nexport type AppPage = {\r\n    file: string,\r\n    name: string,\r\n    keys: string[],\r\n    code: string,\r\n    Demo: any,\r\n}\r\nexport const AppPage = {\r\n    pathname: ({file=\"\", name=\"\"}) => `/rmol/${file}/${!name||name===\"default\"\r\n            ? \"\"\r\n            : name + \"/\"}`,\r\n    file: window.location.pathname.split('/').filter(v=>v).find((_,i)=>i===1)||\"\",\r\n    name: window.location.pathname.split('/').filter(v=>v).find((_,i)=>i===2)||\"\",\r\n    code: ({file=\"\", name=\"\"}) => get(get(CODES, file) || {}, name||\"default\")||\"No code\",\r\n    Demo: ({file=\"\", name=\"\"}) => get(get(DEMOS, file) || {}, name||\"default\")||(()=>null),\r\n    keys,\r\n}\r\nexport * from './Page'\r\nexport * from './serviceWorker'\r\n","import React from 'react'\r\nimport {useFrame} from 'react-three-fiber'\r\nimport {Atom} from '../../src'\r\nexport function Basic () {\r\n  const ref = React.useRef<any>(null)\r\n  useFrame(() => {\r\n    ref.current.rotation.x  =\r\n    ref.current.rotation.y  =\r\n    ref.current.rotation.z += 0.025\r\n  })\r\n  return (\r\n    <Atom top color=\"red\"\r\n        position={[1, -2, -5]}\r\n        rotation={[0,  0,  Math.PI/3]}>\r\n      <boxBufferGeometry attach=\"geometry\" />\r\n      <meshPhongMaterial attach=\"material\" />\r\n      <Atom  color=\"green\"\r\n          position={[2, 0, 1]}\r\n          rotation={[0, 0, Math.PI/3]}>\r\n        <Atom>\r\n          <Atom>\r\n            <Atom>\r\n              <Atom>\r\n                <Atom ref={ref}\r\n                  color=\"blue\"\r\n                  position={[2,0,0]}/>\r\n              </Atom>\r\n            </Atom>\r\n          </Atom>\r\n        </Atom>\r\n      </Atom>\r\n    </Atom>\r\n  )\r\n}\r\nexport default Basic\r\n","import React, {useRef, useMemo} from 'react'\r\nimport {Render, Flow, Vec3} from '../../src'\r\nimport niceColors from 'nice-color-palettes'\r\nimport {useFrame} from 'react-three-fiber'\r\n// import {useControl} from 'react-three-gui'\r\n\r\nconst {sin,cos,max} = Math\r\nconst rand=(m=1,a=0)=>m*Math.random()+a\r\n\r\nexport const Points =({count:c=50})=> {\r\n    const colors = useMemo(() => new Array(c**2).fill(0).map(() =>\r\n        niceColors[17][Math.floor(Math.random()*5)]\r\n    ), [c])\r\n    return (\r\n        <Render position={[-c/4,-1,-c/4]} max={2500}>\r\n            <sphereBufferGeometry attach=\"geometry\" args={[1,32,32]}/>\r\n            <meshPhongMaterial    attach=\"material\" />\r\n            {Array(c**2).fill(0).map((_,i) =>\r\n                <Flow key={i} color={colors[i]}\r\n                    args={(t,x,_,z) => [sin((x+t)/3)+sin((z+t)/2)]}\r\n                    position={r => [i%c,r,i/c%c]}\r\n                    scale={r => [r/3,r/3,r/3]} />\r\n            )}\r\n        </Render>\r\n    )\r\n}\r\nexport const Boxes =()=> {\r\n    const ref = useRef<any>(null)\r\n    const now = useRef<number>(0)\r\n    const colors = useMemo(() => new Array(1000).fill(0).map(() =>\r\n        niceColors[17][~~(Math.random()*5)]\r\n    ), [])\r\n    useFrame((_, delta) => {\r\n        ref.current.rotation.x = Math.sin(now.current / 4)\r\n        ref.current.rotation.y = Math.sin(now.current / 2)\r\n        now.current += delta\r\n    })\r\n    return (\r\n        <Render ref={ref} max={10**3}>\r\n            <boxBufferGeometry attach=\"geometry\" />\r\n            <meshPhongMaterial attach=\"material\" />\r\n            {Array(1000).fill(0).map((_,i) =>\r\n                <Flow key={i} color={colors[i]}\r\n                    args={(t,x,y,z) => [\r\n                        sin(x/4+t)\r\n                       +sin(y/4+t)\r\n                       +sin(z/4+t)\r\n                    ]}\r\n                    position={[i%10-5, i/10%10-5, i/100-5]}\r\n                    rotation={r => [0,r*2,r*3]}\r\n                    scale={r => [r/4,r/4,r/4]}/>\r\n            )}\r\n        </Render>\r\n    )\r\n}\r\nexport const Spheres =() => {\r\n    const c = 1000//useControl(\"count\", {type: \"number\", value: 1000, min: 0, max: 2500})\r\n    const r = 20//useControl(\"range\", {type: \"number\", value: 20, min: 10, max: 30})\r\n    const colors = useMemo(() => [...Array(c)].map(() =>\r\n        niceColors[17][~~rand(5)]\r\n    ), [c])\r\n    return (\r\n        <Render max={c}>\r\n            <sphereBufferGeometry attach=\"geometry\" args={[1, 32, 32]} />\r\n            <meshPhongMaterial    attach=\"material\" color={0xffffff} />\r\n            {Array(c).fill(0).map((_, i) =>\r\n                <Flow key={i} color={colors[i]}\r\n                    args={[...Array(4)].map(_ => rand())}\r\n                    position={(t,s,x,y,z) => [\r\n                        x*2*r - r + cos(t*s*6) + sin(t*s*2),\r\n                        y*2*r - r + sin(t*s*4) + cos(t*s*4),\r\n                        z*2*r - r + cos(t*s*2) + sin(t*s*6),\r\n                    ]}\r\n                    scale={(t,s) => Array(3).fill(max(.5, 2*cos(t+s*50))) as Vec3}\r\n                    />\r\n            )}\r\n        </Render>\r\n    )\r\n}\r\nexport const Particles =({count:c=1000}) => {\r\n    const colors = useMemo(() => [...Array(c)].map(() =>\r\n        niceColors[17][~~rand(5)]\r\n    ), [c])\r\n    return (\r\n        <Render max={c}>\r\n            <dodecahedronBufferGeometry args={[0.2, 0]} />\r\n            <meshPhongMaterial />\r\n            {Array(c).fill(0).map((_, i) =>\r\n                <Flow key={i} color={colors[i]}\r\n                    args={[...Array(5)].map(() => rand(100,-50))}\r\n                    position={(t,s,f,x,y,z) => [\r\n                        x + cos(t*s*f/50) + sin(t*s/50)*f/10,\r\n                        y + sin(t*s*f/50) + cos(t*s/50)*f/10,\r\n                        z + cos(t*s*f/50) + sin(t*s/50)*f/10,]}\r\n                    scale={t => Array(3).fill(Math.cos(t)) as Vec3}/>\r\n            )}\r\n        </Render>\r\n    )\r\n}\r\nexport const Dodecas =({count:c=2500,size=5}: any) => {\r\n    const colors = useMemo(() => [...Array(c)].map(() =>\r\n        niceColors[17][~~rand(5)]\r\n    ), [c])\r\n    return (\r\n        <Render max={c}>\r\n            <dodecahedronBufferGeometry args={[1,0]}/>\r\n            <meshStandardMaterial />\r\n            {Array(c).fill(0).map((_,i) =>\r\n                <Flow key={i}\r\n                    args={[...Array(4)].map(_ => rand())}\r\n                    position={(t,s,x,y,z) => [\r\n                        ((x-.5) - cos(t*s+x) - sin(t*s/1))*(x*100+50),\r\n                        ((y-.5) - sin(t*s+y) - cos(t*s/3))*(y*100+50),\r\n                        ((z-.5) - cos(t*s+z) - sin(t*s/5))*(z*100+50),\r\n                    ]}\r\n                    rotation={(t,s)=>Array(3).fill(cos(t*s)*size) as Vec3}\r\n                    scale={(t,s)=>Array(3).fill(cos(t*s/2)*size) as Vec3}\r\n                    color={colors[i]}/>\r\n            )}\r\n        </Render>\r\n    )\r\n}\r\nexport default Dodecas\r\n// ************************* CODES ************************* //\r\n","import React from 'react'\r\nimport {C, H, O, CH3, Mol, Poly} from '../../src'\r\n// utils\r\nconst rand=(mul=Math.PI*2)=>Math.random()*mul\r\n\r\nexport const MethylAlcohol =()=>\r\n    <Mol recursion>\r\n        <C><H/><H/><H/></C>\r\n        <O><H/></O>\r\n    </Mol>\r\nexport const AcetilAcid =()=>\r\n    <Mol recursion>\r\n        <C><H/><H/><H/></C>\r\n        <C><O double/></C>\r\n        <O><H/></O>\r\n    </Mol>\r\nexport const Polyethylene =()=>\r\n    <H>\r\n        <Poly n={2}>\r\n        {(children, i) =>\r\n            <C angle={(i%2)*Math.PI/2}>\r\n                <C angle={(i%2)*Math.PI/2}>\r\n                    {children||<H/>}\r\n                    <H/><H/>\r\n                </C>\r\n                <H/><H/>\r\n            </C>\r\n        }\r\n        </Poly>\r\n    </H>\r\nexport const Polypropylene =()=>\r\n    <H>\r\n        <Poly n={2}>\r\n        {(children, i) =>\r\n            <C angle={(i%2)*Math.PI/2}>\r\n                <C angle={(i%2)*Math.PI/2}>\r\n                    {children||<H/>}\r\n                    <CH3/>\r\n                    <H/>\r\n                </C>\r\n                <H/><H/>\r\n            </C>\r\n        }\r\n        </Poly>\r\n    </H>\r\nexport const Random =()=>\r\n    <H max={2000}>\r\n        <Poly n={200}>\r\n        {children =>\r\n            <C angle={rand()}>\r\n                <C angle={rand()}>\r\n                    {children||<H/>}\r\n                    <H/>\r\n                    <C><H/><H/><H/></C>\r\n                </C>\r\n                <H/><H/>\r\n            </C>\r\n        }\r\n        </Poly>\r\n    </H>\r\nexport default Random\r\n","import React from 'react'\r\nimport {Hel} from '../../src'\r\n\r\nexport const Archimedes =()=> (\r\n    <Hel>\r\n    </Hel>\r\n)\r\nexport const Fermat =()=> (\r\n    <Hel>\r\n    </Hel>\r\n)\r\nexport const Power =()=> (\r\n    <Hel>\r\n    </Hel>\r\n)\r\nexport default Power\r\n","import * as Basic from './Basic'\r\nimport * as Flow from './Flow'\r\nimport * as Mol from './Mol'\r\nimport * as Hel from './Hel'\r\n// import * as Plant from './Plant'\r\n// import * as Swarm from './Swarm'\r\nexport default {Basic, Flow, Mol, Hel, }\r\n","// import React from 'react'\r\n// import {animated as a} from 'react-spring'\r\n// export function Page (props: {}): JSX.Element\r\n// export function Page (props: any) {\r\n//     return (\r\n//         <a.div {...usePage(props)}/>\r\n//     )\r\n// }\r\n// export default Page\r\nexport * from './hooks'\r\nexport * from './types'\r\nexport * from './utils'\r\n","/** ************************* USE PAGE *************************\r\n * This is a hook to record the URL of the Restfl API\r\n *   - `const [page, set] = usePage({id:null,home:({id})=>!id}, config)`\r\n *   - `const onClick=()=>set({id:90}, config)`\r\n *   - ```\r\n *     {Page, id:null}  <=data=> (DB1 : URL1 by id), (DB2 : URL2 by id)\r\n *          | change id\r\n *          |  => change URLs by id (e.g. /api to /api/90)\r\n *          v  => change user state (e.g. home:true to home:false)\r\n *     {New Page, id:90}\r\n *     ```\r\n * # ***** usePage API Configs *****\r\n * ## Props Values\r\n *   - `const _ = usePage(@initPage, @config)`\r\n *   - @initPage = {\r\n *         @isHome  :boolean\r\n *         @isLocal :boolean\r\n *         @id      :string e.g. 2\r\n *         @protocol:string e.g. \"https:\"\r\n *         @hostname:string e.g. \"localhost\"\r\n *         @portname:string e.g. \"3000\"   or [\"3000\"(npm), \"8000\"(django)]\r\n *         @pathname:string e.g. \"/note/\" or [\"/note/\", \"/api/note/\"]\r\n *         @search  :string e.g. \"/note/\" or [\"/note/\", \"/api/note/\"]\r\n *         @hash    :string e.g. \"#note\"  or [\"#note\"]\r\n *   - @config = {TODO}\r\n *   - type MultiPage<T=any> = T|T[]|((p:Page)=>T|T[])\r\n * ## Return Values\r\n *   - @page : {...@initPage(as T|T[]),\r\n *         @url ?: from initPage parameters    e.g. \"http...\" or [\"http...\", ...more]\r\n *         @XXX ?: any value you set when init e.g. @home:true\r\n *   - @set   : (args) => void ( setState )\r\n ** ************************* ********* *************************/\r\nimport {useEffect, useState, useCallback, useRef} from 'react'\r\nimport {pageConfig as defaultConf, defaultPage, normPage} from './utils'\r\nimport {Page , PageConfig as Conf, BasicProps, BasicState, BasicAction} from './types'\r\nexport const usePage = <T extends {}={}>(\r\n    props :BasicProps<Partial<Page<T>>>,//BasicProps<Page<T>>,\r\n    config:BasicProps<Partial<Conf<T>>>={},\r\n): [Page<T>, BasicAction<Partial<Page<T>>>] => {\r\n    if (typeof props===\"function\") props  = props()\r\n    if (typeof config===\"function\")config = config()\r\n    const pageRef = useRef<Page<T>>({...defaultPage, ...props } as Page<T>)\r\n    const confRef = useRef<Conf<T>>({...defaultConf, ...config} as Conf<T>)\r\n    const [p,set] = useState<Page<T>>( normPage(pageRef.current) )\r\n    const setPage = useCallback((state:BasicState<Partial<Page<T>>>) => {\r\n        if (typeof state===\"function\")\r\n            state = state(pageRef.current as Partial<Page<T>>)\r\n        pageRef.current = {...pageRef.current, ...state}\r\n        set(pre => {\r\n            const newPage = normPage(pageRef.current)\r\n            if (pre.pathname===newPage.pathname)\r\n                return newPage\r\n            window.history.pushState('', '',\r\n                newPage.pathname instanceof Array\r\n                  ? newPage.pathname[0] || ''\r\n                  : newPage.pathname    || '')\r\n            console.log(newPage.pathname)\r\n            return  newPage\r\n        })\r\n    }, [set])\r\n    useEffect(() => {\r\n        const {onChange} = confRef.current\r\n        typeof onChange===\"function\" && onChange()\r\n    }, [p.id])\r\n    return [p, setPage]\r\n}\r\n","export const Basic = `\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Atom } from 'react-mol'\r\nimport { Canvas, useFrame } from 'react-three-fiber'\r\nfunction BasicExample () {\r\n  const ref = React.useRef<any>(null)\r\n  useFrame(() => {\r\n    ref.current.rotation.x  =\r\n    ref.current.rotation.y  =\r\n    ref.current.rotation.z += 0.025\r\n  })\r\n  return (\r\n    <Atom  color=\"red\"\r\n        position={[1, -2, -5]}\r\n        rotation={[0,  0,  Math.PI/3]}>\r\n      <boxBufferGeometry attach=\"geometry\" />\r\n      <meshPhongMaterial attach=\"material\" />\r\n      <Atom  color=\"green\"\r\n          position={[2, 0, 1]}\r\n          rotation={[0, 0, Math.PI/3]}>\r\n        <Atom>\r\n          <Atom>\r\n            <Atom>\r\n              <Atom>\r\n                <Atom ref={ref}\r\n                  color=\"blue\"\r\n                  position={[2,0,0]}/>\r\n              </Atom>\r\n            </Atom>\r\n          </Atom>\r\n        </Atom>\r\n      </Atom>\r\n    </Atom>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Canvas>\r\n    <pointLight   />\r\n    <ambientLight />\r\n    <BasicExample />\r\n  </Canvas>,\r\n  document.getElementById('root')\r\n)\r\n`\r\n","export const Points = `\r\n<Render position={[-12.5,0,-25]} max={2500}>\r\n  <sphereBufferGeometry/>\r\n  <meshPhongMaterial   />\r\n  {Array(2500).fill(0).map((_,i) =>\r\n    <Flow key={i} color={colors[i]}\r\n      args={(t,x,_,z) => [\r\n        sin((x+t)/3)+sin((z+t)/2)]}\r\n      position={r => [i%c,r,i/c%c]}\r\n      scale={r => [r/3,r/3,r/3]} />\r\n  )}\r\n</Render>\r\n`\r\nexport const Boxes = `\r\n<Render max={10**3}>\r\n  <boxBufferGeometry />\r\n  <meshPhongMaterial/>\r\n  {Array(1000).fill(0).map((_,i) =>\r\n    <Flow key={i} color={colors[i]}\r\n      args={(t,x,y,z) => [\r\n        sin(x/4+t)+sin(y/4+t)+sin(z/4+t) ]}\r\n      position={[i%10-5,i/10%10-5,i/100-5]}\r\n      rotation={r => [0,r*2,r*3]}\r\n      scale={r => [r/4,r/4,r/4]}/>\r\n  )}\r\n</Render>\r\n`\r\nexport const Spheres = `\r\n<Render max={1000}>\r\n  <sphereBufferGeometry args={[1,32,32]}/>\r\n  <meshPhongMaterial color={0xffffff}/>\r\n  {Array(1000).fill(0).map((_, i) =>\r\n    <Flow key={i} color={colors[i]}\r\n      args={[...Array(4)].map(() => rand())}\r\n      position={(t,s,x,y,z) => [\r\n        x*40-20 + cos(t*s*6) + sin(t*s*2),\r\n        y*40-20 + sin(t*s*4) + cos(t*s*4),\r\n        z*40-20 + cos(t*s*2) + sin(t*s*6),]}\r\n      scale={(t,s) => Array(3).fill(\r\n              max(.3, cos((t+s*10)*s))*s)}/>\r\n  )}\r\n</Render>\r\n`\r\nexport const Particles = `\r\n<Render max={c}>\r\n  <dodecahedronBufferGeometry args={[0.2, 0]} />\r\n  <meshPhongMaterial />\r\n  {Array(c).fill(0).map((_, i) =>\r\n    <Flow key={i} color={colors[i]}\r\n        args={[...Array(5)].map(() => rand(100,-50))}\r\n        position={(t,s,f,x,y,z) => [\r\n            x + cos(t*s*f/50) + sin(t*s/50)*f/10,\r\n            y + sin(t*s*f/50) + cos(t*s/50)*f/10,\r\n            z + cos(t*s*f/50) + sin(t*s/50)*f/10,]}\r\n        scale={t => Array(3).fill(Math.cos(t)) as Vec3}/>\r\n  )}\r\n</Render>\r\n`\r\nexport const Dodecas = `\r\n<Render max={1000}>\r\n  <dodecahedronBufferGeometry args={[1,0]}/>\r\n  <meshStandardMaterial/>\r\n  {Array(1000).fill(0).map((_,i) =>\r\n    <Flow key={i} color={colors[i]}\r\n      args={[...Array(4)].map(_ => rand())}\r\n      position={(t,s,x,y,z) => [\r\n        ((x-.5)-cos(t*s+x)-sin(t*s/1))*x*100,\r\n        ((y-.5)-sin(t*s+y)-cos(t*s/3))*y*100,\r\n        ((z-.5)-cos(t*s+z)-sin(t*s/5))*z*100,]}\r\n      rotation={(t,s)=>Array(3).fill(cos(t*s))}\r\n      scale={(t,s)=>Array(3).fill(cos(t*s))}/>\r\n  )}\r\n</Render>\r\n`\r\n","export const MethylAlcohol = `\r\n<C>\r\n  <H/>\r\n  <H/>\r\n  <H/>\r\n  <OH/>\r\n</C>\r\n\r\nor\r\n\r\n<Mol recursion>\r\n  <CH3/>\r\n  <OH/>\r\n</Mol>\r\n`\r\nexport const AcetilAcid = `\r\n<C>\r\n  <CH3/>\r\n  <O double/>\r\n  <OH/>\r\n</C>\r\n\r\nor\r\n\r\n<Mol recursion>\r\n  <CH3/>\r\n  <COOH/>\r\n</Mol>\r\n`\r\nexport const Polyethylene = `\r\n<H>\r\n  <Poly n={100}}>\r\n  {next =>\r\n    <CH2>\r\n      <CH2>\r\n      {next||<H/>}\r\n      </CH2>\r\n    </CH2>\r\n  }\r\n  </Poly>\r\n</H>\r\n\r\nor\r\n\r\n<H>\r\n  <Poly n={100}}>\r\n  {next =>\r\n    <CH2>\r\n      <CH2>\r\n      {next||<H/>}\r\n      </CH2>\r\n    </CH2>\r\n  }\r\n  </Poly>\r\n</H>\r\n`\r\nexport const Polypropylene = `\r\n<H>\r\n  <Poly n={2}>\r\n    {(children, i) =>\r\n      <C angle={(i%2)*Math.PI/2}>\r\n        <C angle={(i%2)*Math.PI/2}>\r\n          {children||<H/>}\r\n          <CH3/>\r\n          <H/>\r\n        </C>\r\n        <H/><H/>\r\n      </C>\r\n    }\r\n  </Poly>\r\n</H>\r\n`\r\nexport const Random = `\r\n<H max={2000}>\r\n    <Poly n={200}>\r\n    {children =>\r\n        <C angle={rand()}>\r\n            <C angle={rand()}>\r\n                {children||<H/>}\r\n                <H/>\r\n                <C><H/><H/><H/></C>\r\n            </C>\r\n            <H/><H/>\r\n        </C>\r\n    }\r\n    </Poly>\r\n</H>\r\n`\r\n","export const Archimedes = `\r\n`\r\nexport const Fermat = `\r\n`\r\nexport const Power = `\r\n`\r\n","import * as Basic from './Basic'\r\nimport * as Flow from './Flow'\r\nimport * as Mol from './Mol'\r\nimport * as Hel from './Hel'\r\nexport default {Basic, Flow, Mol, Hel}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Canvas} from 'react-three-fiber'\nimport {Helmet} from 'react-helmet-async';\nimport {OrbitControls} from 'drei'\nimport {HelmetProvider} from 'react-helmet-async'\nimport {Controls, ControlsProvider} from 'react-three-gui';\nimport {Card, Code, Split, Trees} from '@tsei/core'\nimport {unregister, usePage, AppPage}  from './utils'\nimport {useGrid} from 'use-grid'\nimport './styles.css'\n\nconst STYLES: {[key:string]:React.CSSProperties} = {\n    top : {overflowX:\"hidden\",minHeight:\"100%\",},\n    card: {width:\"100%\",height:\"100%\"},\n    ctrl: {position:\"relative\",width:\"100%\",top:0,left:0,margin:0,padding:0},\n    note: {width:\"100%\", height:\"100%\", display:\"block\", padding:\"1rem\",}\n}\n// ************************* COMPONENTS ************************* //\nconst HookNote = (props:any) => <div {...props} style={STYLES.note}/>\nconst HookCard = (props:any) => <Card {...props}min={-1} style={STYLES.card} rate={.1} />\nconst HookCode = (props:any) => props.code && <Code {...props}/>\nconst HookCtrl = (props:any) => <Controls {...props} anchor='top_left' style={STYLES.ctrl} collapsed={true}/>\nconst HookTree = ({children}: any) => <Trees style={{fontSize:15}}>{children}</Trees>\nconst HookCanvas = ({children}: any) => (\n    <Canvas pixelRatio={window.devicePixelRatio}\n            onCreated={({gl}) => gl.setClearColor('lightpink')}\n            camera={{fov: 75, position: [0, 0, 5]}}\n            style={{width: '100%', height: 'calc(100vh - 2rem)'}}\n            gl={{alpha: true, antialias: false, logarithmicDepthBuffer: true}}>\n        <ambientLight intensity={.3} />\n        <pointLight position={[ 100, 100, 100]} intensity={2.2} />\n        <pointLight position={[-100,-100,-100]} intensity={5} color=\"pink\" />\n        <OrbitControls />\n        <React.Suspense fallback={null}>\n            {children}\n        </React.Suspense>\n    </Canvas>\n)\n// ************************* APP ************************* //\nfunction App () {\n    const [,set] = React.useState(0)\n    const [dark] = useGrid<number>({init:0, md:1, lg:0  })\n    const [size] = useGrid<number>({init:0, md:1, lg:1.5})\n    const [side] = useGrid({xs:0,lg:89/233})\n    const [page, setPage] = usePage<any>(AppPage)\n    const trees = React.useMemo(() => page.keys.map((file:string[], i=\"\") =>\n        <span key={i}>\n            {file.map(name => name && name!==\"default\" &&\n            <span key={name} onClick={() => setPage({file:file[0], name})}>{name}</span>\n            )}\n        </span>\n    ), [page.keys, setPage])\n    if (page.hash===\"#app\")\n        return (\n        <HookNote>\n            <HookCard {...{dark,size}}>\n                <HookCanvas {...{dark,size}}><page.Demo/></HookCanvas>\n            </HookCard>\n            <button onClick={()=>set(p=>p+1)}>Render</button>\n        </HookNote>\n    )\n    return (\n        <div style={STYLES.top}>\n            <Split order={[side, -1]} min={.1}>\n                <HookNote>\n                    <HookCard {...{dark,size}}>\n                        <HookCtrl/>\n                    </HookCard>\n                    <HookCard {...{dark,size}}>\n                        <HookTree>{trees}</HookTree>\n                    </HookCard>\n                    <HookCard {...{dark,size}}>\n                        <HookCode code={page.code}/>\n                    </HookCard>\n                    <button onClick={()=>set(p=>p+1)}>Render</button>\n                </HookNote>\n                <HookNote>\n                    <HookCard {...{dark,size}}>\n                        <HookCanvas {...{dark,size}}><page.Demo/></HookCanvas>\n                    </HookCard>\n                </HookNote>\n            </Split>\n            <Helmet>\n                <title>{window.location.pathname.split('/').slice(-1)[0]}</title>\n                <meta charSet=\"utf-8\" />\n                <meta name=\"Hatena::Bookmark\" content=\"nocomment\" />\n                <link rel=\"canonical\" href=\"https://tsei.jp/\" />\n            </Helmet>\n        </div>\n    )\n}\n\nReactDOM.render(\n  <HelmetProvider>\n    <ControlsProvider>\n      <App/>\n    </ControlsProvider>\n  </HelmetProvider>\n, document.getElementById('root'));\nunregister();\n","import React, {useContext, useRef, useMemo, useState} from 'react'\r\nimport {Color, Group} from 'three'\r\nimport {render} from '../Render'\r\nimport {States} from '../types'\r\nlet uuid = 0\r\n\r\nexport function useHierarchy (props: any, ref: any): any\r\nexport function useHierarchy (props: any, ref: any) {\r\n    const {states} = useContext<States>(render)\r\n    const [index] = useState(() => uuid++)\r\n    const color = useRef<Color>(new Color().set(props.color||\"black\"))\r\n    const group = useRef<Group>(null)\r\n    React.useEffect(() => {\r\n        if (!group.current) return\r\n        group.current.updateMatrixWorld()\r\n        states.current[index] = {\r\n            group: group.current,\r\n            color: color.current\r\n        }\r\n        // return () => void (delete states.current[index])\r\n    }, [states, index])\r\n    React.useImperativeHandle(ref, () => group.current && ({\r\n        position: group.current.position,\r\n        rotation: group.current.rotation,\r\n        scale   : group.current.scale,\r\n        color   : color.current\r\n    }))\r\n    const children = useMemo(() =>\r\n        props?.children && typeof props.children[0]===\"function\"\r\n            ? props.children[0]({...props, state: props, children:null})\r\n            : React.Children.map(props.children, (child: any, key) =>\r\n                child && React.cloneElement(child, {\r\n                    //⚠ crash if children isnt assigned null ⚠\r\n                    ...props, state: props, children:null,\r\n                    ...child.props, index: key\r\n            })\r\n        )\r\n    , [props])\r\n    return {...props, ref: group, children}\r\n}\r\n","import React, {Children} from 'react'\r\nimport {Render} from '../Render'\r\nimport {Props} from '../types'\r\nimport {useHierarchy} from './hooks'\r\n\r\nexport type Hierarchy = {\r\n    <T extends object={}>(props: unknown & Partial<Props<T>>): null | JSX.Element\r\n}\r\nexport const Hierarchy = React.forwardRef((props: any, ref) => (\r\n    <group {...useHierarchy(props, ref)}/>\r\n))\r\nexport const Recursion = (props:any) => {\r\n    const [child, ...children] = Children.map(props.children, c=>c)\r\n    if (typeof child!==\"object\") return null\r\n    const grand = Children.map(child.props.children, c=>c)\r\n    return React.cloneElement(child, {\r\n        ...props, recursion: false, children: [\r\n            ...(grand || []),//.slice(props.length) // ???\r\n            children.length && <Recursion key={grand.length} {...{children}}/>\r\n        ]\r\n    })\r\n}\r\nexport type Atom = {\r\n    <T extends object={}>(props: unknown & Partial<Props<T>>): null | JSX.Element;\r\n}\r\nexport const Atom: Atom = React.forwardRef(({\r\n    geometry=null, cut=2,\r\n    material=null, max=1000,\r\n    children=null, top=false,\r\n    ...props\r\n}: any, ref) => {\r\n    if (typeof children===\"function\") children = [children]\r\n    if (!(children instanceof Array)) children = Children.map(children, c=>c)\r\n    if ( (geometry &&  material) || !top) cut = 0\r\n    if ((!geometry &&  material) || (geometry && !material)) cut /= 2\r\n    const Atom = props.recursion? Recursion : Hierarchy\r\n    if (!top)\r\n        return <Atom ref={ref} {...props}>{children?.slice(cut)}</Atom>\r\n    return (\r\n        <Render {...{geometry, material, cut, max}}>\r\n            {[...children.slice(0, cut),\r\n            <Atom ref={ref} {...props} key={0} top={false}\r\n                position= {props.position || [0,0,0]}>\r\n                {children.slice(cut)}\r\n            </Atom>]}\r\n        </Render>\r\n    )\r\n})\r\n","import * as THREE from 'three'\r\nimport {Vec3} from './types'\r\nimport {BufferGeometryUtils} from 'three/examples/jsm/utils/BufferGeometryUtils.js';\r\nconst rad = Math.sqrt(2)*2/3\r\nconst base = new THREE.Vector3(0,1,0)\r\nconst axis = new THREE.Vector3()\r\nconst vec3 = new THREE.Vector3()\r\nconst euler= new THREE.Euler()\r\nconst quat1= new THREE.Quaternion()\r\n// const quat2= new THREE.Quaternion()\r\n\r\nexport function mergeVec3(rate:number[], ...vec:Vec3[]): Vec3 {\r\n    return [0,1,2].map(j => rate.map((r,i) => r*vec[i][j]).reduce((a,b) => a+b)) as Vec3\r\n}\r\nexport function scaleVec3(vec:Vec3=[0,0,0]): Vec3 {\r\n    return [1, vec3.set(...vec).length(), 1] as Vec3\r\n}\r\nexport function eulerVec3(_axis:Vec3=[1,0,0],_base:Vec3=[0,1,0]): Vec3 {\r\n    axis.set(..._axis).normalize()\r\n    base.set(..._base).normalize()\r\n    quat1.setFromUnitVectors(base, axis);\r\n    euler.setFromQuaternion(quat1)\r\n    return euler.toArray().slice(0,3) as Vec3\r\n}\r\nexport function calcMolPos (index?:number, angle=Math.PI/2, double=false): Vec3 {\r\n    if (typeof index !== \"number\") return [0,0,0]\r\n    const phi = index * Math.PI* 2/3 + (angle || 0)\r\n    const vec = [rad*Math.cos(phi), 1/3, rad*Math.sin(phi)] as Vec3\r\n    return double\r\n        ? mergeVec3([1,1],\r\n            calcMolPos(0, angle),\r\n            index<4? vec: [0,-1,0])\r\n        :   index<4? vec: [0,-1,0]\r\n}\r\nexport function mergedGeometry () {\r\n    const arr = new THREE.Matrix4().makeTranslation(0,-1/2,0)\r\n    const sph = new THREE.SphereBufferGeometry(.3, 32, 32)\r\n    const cyl = new THREE.CylinderBufferGeometry(.1,.1,1,10)\r\n    cyl.applyMatrix4(arr);\r\n    return BufferGeometryUtils.mergeBufferGeometries([cyl, sph])\r\n}\r\n// export function calcRelative (position:Vec3=[0,0,0], rotation:Vec3=[0,0,0], distance:Vec3=[0,1,0]) {\r\n//     base.set(0,1,0)\r\n//     axis.set (...distance).normalize() // TODO use group.updateMatrix()\r\n//     euler.set(...rotation)\r\n//     quat1.setFromUnitVectors(base, axis)\r\n//     quat2.setFromEuler(euler)\r\n//     return  vec3.set(...position)\r\n//                 .normalize()\r\n//                 .applyQuaternion(quat1.multiply(quat2))\r\n//                 .setLength(1)\r\n//                 .toArray() as Vec3\r\n// }\r\n// TODO use parent: CH3OH = (H)-(O)-(CH3)\r\n// - now  calcAtom: (H: parent)-(O: me)-(CH3: calc child): using O and CH3\r\n// - next calcAtom: (H: parent)-(O: calc me)-(CH3: not using child): using H and O\r\n","import {PageConfig, Page, URL as U} from './types'\r\nimport {joinURL} from '@tsei/core'\r\n// ************************* 👌 use-page 👌 ************************* //\r\nexport const equalPathname = (...urls:(U|string|undefined|null|false)[]) =>\r\n    urls.map(u => typeof u===\"string\"? new URL(u) : u)\r\n        .map(u => u && joinURL(u.pathname, \"/\"))\r\n        .every((u, _, self) => u===self[0])\r\n\r\nexport const pageConfig:PageConfig = {onChange:null,}\r\nexport const defaultPage = {\r\n    id      :window.location.pathname.split('/').filter(v=>v).find((_,i)=>i===1)||\"\",\r\n    isHome  :window.location.pathname.split('/').filter(v=>v).length > 1,\r\n    isLocal :window.location.hostname===\"localhost\",\r\n    protocol:window.location.protocol ||\"\",\r\n    hostname:window.location.hostname ||\"\",\r\n    portname:window.location.port     ||\"\",\r\n    pathname:window.location.pathname ||\"\",\r\n    search  :window.location.search   ||\"\",\r\n    hash    :window.location.hash     ||\"\",\r\n    language:window.navigator.language||\"ja\",\r\n    urls    :[new URL(window.location.href)],\r\n}\r\nexport const joinPage = <T={}>(page:Page<T>):string|string[] => {\r\n    const {protocol,hostname,portname,pathname=\"\",search=\"\",hash=\"\"} = page;\r\n    const arr  =[protocol,hostname,portname,pathname,search,hash]\r\n    const getp =(port:any)=>port?`:${port}`:\"\"\r\n    const geti =(i=0,n:any)=>n instanceof Array?(i<n.length?n[i]:n[n.length-1]):n\r\n    if (arr.every(v=>typeof v===\"string\"))\r\n        return joinURL(`${protocol}//${hostname}${getp(portname)}/`,pathname as any, search as any)\r\n    const maxLength = arr.map(v=>v instanceof Array?v.length:1).reduce((a,b)=>a>b?a:b)\r\n    return [...Array(maxLength)].map((_,i) =>\r\n        joinURL( `${geti(i,protocol)}//${geti(i,hostname)\r\n            }${getp(geti(i,portname))}/`,geti(i,pathname),geti(i,search) )\r\n    ) as string[]\r\n}\r\nexport const normPage = <T extends {}={}>(page:Page<T>) => {\r\n    const state = {...page} as any\r\n    Object.entries(state)\r\n          .sort(([_,val]) => typeof val===\"function\"?1:-1)\r\n          .forEach(([key,val]: any) => (state[key]=typeof val===\"function\"?val(state):val))\r\n    const urls = joinPage<T>(state as Page<T>)\r\n    return {...state, urls:urls instanceof Array\r\n      ? urls.map((u:any) => typeof u===\"string\" ? new URL(u) : u) as U[]\r\n      : [typeof urls===\"string\" ? new URL(urls) : urls] as U[] } as Page<T>\r\n}\r\n","import React, {useRef, useMemo} from 'react'\r\nimport {Props, State, States} from './types'\r\nimport {useFrame} from 'react-three-fiber'\r\nexport const render = React.createContext<States>(null as any)\r\nexport type  Render = {\r\n    <T extends object={}>(props: Partial<Props<T>>) : JSX.Element;\r\n}\r\nexport const Render = React.forwardRef(({\r\n    geometry=null, cut=2,\r\n    material=null, max=1000,\r\n    children=null, ...props\r\n}: any, forwardRef) => {\r\n    if (typeof geometry===\"function\") geometry = geometry()\r\n    if (typeof material===\"function\") material = material()\r\n    const mesh  = useRef<any>(null)\r\n    const group = useRef<any>(null)\r\n    const states= useRef<State[]>([])\r\n    const value = useMemo<States>(() => ({states}), [])\r\n    useFrame(() => {\r\n        states.current.forEach((state: any, i) => {\r\n            mesh.current.setColorAt (i, state.color)\r\n            mesh.current.setMatrixAt(i, state.group.matrixWorld)\r\n        })\r\n        mesh.current.instanceMatrix.needsUpdate = true\r\n    })\r\n    React.useImperativeHandle(forwardRef, () => ({\r\n          ...group.current,\r\n        mesh: mesh.current\r\n    }))\r\n    // ERROR if none\r\n    const child = useRef<any>(children instanceof Array && children.slice(cut))\r\n    return (\r\n        <render.Provider value={value}>\r\n            <group ref={group} {...props}>\r\n                <instancedMesh ref={mesh} args={[geometry,material,max] as [any,any,number]}>\r\n                    {children instanceof Array && children.slice(0, cut)}\r\n                </instancedMesh>\r\n                {child.current}\r\n            </group>\r\n        </render.Provider>\r\n    )\r\n})\r\n"],"sourceRoot":""}